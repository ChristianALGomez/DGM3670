{
string $sels[] = `ls -sl`;
string $seList[];
string $obj [];
string $objects [];




proc stair(int $Dup, float $Xmin, float $Xmax, float $Ymin, float $Ymax, float $Zmin, float $Zmax, float $XSmin, float $XSmax, float $YSmin, float $YSmax, float $ZSmin, float $ZSmax) {
if (size($sels) > 0) 
{
    $seList[size($seList)] = $sels[0];
	
	for( $i=0; $i<$Dup; ++$i )
	{
	    float $Xaxis = `rand  $Xmin $Xmax`;
        float $Yaxis = `rand  $Ymin $Ymax`;
        float $Zaxis = `rand  $Zmin $Zmax`;
        float $Xrotation =  `rand  $Xmin $Xmax`;
        float $Yrotation =  `rand  $Ymin $Ymax`;
        float $Zrotation =  `rand  $Zmin $Zmax`;
        float $Xscale =  `rand  $XSmin $XSmax`;
        float $Yscale =  `rand  $YSmin $YSmax`;
        float $Zscale =  `rand  $ZSmin $ZSmax`;
	    
		$sels = `duplicate -rr ($seList[size($seList) -1])`;
		//$objects [size($objects)] = $obj[0];
		$seList[size($seList)] = $sels[0];
		move -a -os -wd $Xaxis $Yaxis $Zaxis ;
		rotate -r -os -fo $Xrotation $Yrotation $Zrotation ;
		scale $Xscale $Yscale $Zscale;
		//move -r -os -wd $Xaxis $Yaxis $Zaxis ;
	}
	//polyUnite $objects;
	polyUnite $seList;
	DeleteHistory;
	rename "OBJ";
}

else {
error ("Must select an object!");
}
}
}

stair(200, -20, 20, -20, 20, -20, 20, 0, 1, 0, 1, 0, 1 )